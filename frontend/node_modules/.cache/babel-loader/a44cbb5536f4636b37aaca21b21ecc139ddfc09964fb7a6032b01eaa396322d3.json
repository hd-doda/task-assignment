{"ast":null,"code":"var _jsxFileName = \"D:\\\\task_assignment\\\\frontend\\\\src\\\\pages\\\\StudentDashboardPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Navbar from '../components/Navbar';\nimport { auth } from '../firebase';\nimport { FaCheck, FaTimes } from 'react-icons/fa'; // Icons for correct and incorrect answers\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StudentDashboardPage = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [answers, setAnswers] = useState({}); // Track selected answers\n  const [submittedQuestions, setSubmittedQuestions] = useState(null); // Track submitted questions and answers\n  const [loading, setLoading] = useState(true); // Track loading state\n\n  // Fetch questions and submitted answers from the backend\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Fetch questions\n        const questionsResponse = await fetch('https://backend-assignment-zcei.onrender.com/api/questions/get-questions');\n        const questionsData = await questionsResponse.json();\n        setQuestions(questionsData);\n\n        // Fetch submitted answers\n        const submittedResponse = await fetch(`http://localhost:5000/api/results/get-result?studentId=${auth.currentUser.uid}`);\n        const submittedData = await submittedResponse.json();\n        console.log('Submitted Data:', submittedData); // Debugging log\n\n        if (submittedData.answers) {\n          setSubmittedQuestions(submittedData.answers); // Track submitted question IDs and answers\n        } else {\n          setSubmittedQuestions({}); // Initialize as empty object if no answers exist\n        }\n      } catch (err) {\n        console.error('Error fetching data:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Handle answer selection\n  const handleAnswerChange = (questionId, selectedOption) => {\n    setAnswers({\n      ...answers,\n      [questionId]: selectedOption\n    });\n  };\n\n  // Handle form submission for a single question\n  const handleSubmit = async questionId => {\n    if (!answers[questionId]) {\n      alert('Please select an answer before submitting.');\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:5000/api/results/save-result', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          studentId: auth.currentUser.uid,\n          answers: {\n            [questionId]: answers[questionId]\n          } // Submit only the selected question\n        })\n      });\n      const data = await response.json();\n      console.log('Submit Response:', data); // Debugging log\n\n      if (response.ok) {\n        alert('Answer submitted successfully!');\n        setSubmittedQuestions(prev => ({\n          ...prev,\n          [questionId]: answers[questionId]\n        })); // Update submitted questions\n        setAnswers(prevAnswers => {\n          const updatedAnswers = {\n            ...prevAnswers\n          };\n          delete updatedAnswers[questionId]; // Remove the submitted answer from the state\n          return updatedAnswers;\n        });\n      } else if (response.status === 400 && data.duplicateQuestions) {\n        alert('You have already submitted an answer for this question.');\n      } else {\n        alert('Failed to submit answer.');\n      }\n    } catch (err) {\n      console.error('Error submitting answer:', err);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center min-h-screen bg-gradient-to-r from-indigo-500 via-purple-500 to-pink-500\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-lg text-white\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gradient-to-r from-indigo-500 via-purple-500 to-pink-500\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-4xl font-bold text-white mb-2\",\n          children: \"Student Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg text-gray-200\",\n          children: \"Answer the questions and track your progress.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-4xl mx-auto space-y-6\",\n        children: questions.map(question => {\n          const isSubmitted = submittedQuestions && submittedQuestions[question._id]; // Check if the question is submitted\n          const studentAnswer = submittedQuestions && submittedQuestions[question._id]; // Get the student's answer\n          const correctAnswer = question.correct_answer; // Get the correct answer\n\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white p-6 rounded-lg shadow-lg border border-gray-200 hover:shadow-xl transition-shadow duration-300\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-xl font-semibold mb-4 text-gray-800\",\n              children: question.question_text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this), isSubmitted ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"space-y-3\",\n                children: question.options.map((option, idx) => {\n                  const isCorrect = option === correctAnswer;\n                  const isStudentAnswer = option === studentAnswer;\n                  const isIncorrect = isStudentAnswer && !isCorrect;\n                  return /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: `p-3 rounded-md flex items-center ${isCorrect ? 'bg-green-50 border border-green-500' : isIncorrect ? 'bg-red-50 border border-red-500' : 'bg-gray-50'}`,\n                    children: [isCorrect && /*#__PURE__*/_jsxDEV(FaCheck, {\n                      className: \"text-green-600 mr-2\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 135,\n                      columnNumber: 43\n                    }, this), isIncorrect && /*#__PURE__*/_jsxDEV(FaTimes, {\n                      className: \"text-red-600 mr-2\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 136,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-gray-700\",\n                      children: option\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 137,\n                      columnNumber: 29\n                    }, this), isCorrect && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"ml-2 text-green-600 font-medium\",\n                      children: \"(Correct Answer)\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 139,\n                      columnNumber: 31\n                    }, this), isIncorrect && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"ml-2 text-red-600 font-medium\",\n                      children: \"(Your Answer)\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 142,\n                      columnNumber: 31\n                    }, this)]\n                  }, idx, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 125,\n                    columnNumber: 27\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 21\n              }, this)\n            }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"space-y-3\",\n                children: question.options.map((option, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"flex items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"radio\",\n                    name: `question-${question._id}`,\n                    value: option,\n                    onChange: () => handleAnswerChange(question._id, option),\n                    className: \"mr-3 h-5 w-5 text-blue-600 border-gray-300 focus:ring-blue-500\",\n                    disabled: isSubmitted // Disable if already submitted\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 154,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-gray-700\",\n                    children: option\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 27\n                  }, this)]\n                }, idx, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleSubmit(question._id),\n                className: \"mt-4 w-full sm:w-auto bg-blue-600 text-white px-6 py-2 rounded-md hover:bg-blue-700 transition-all disabled:bg-gray-400 disabled:cursor-not-allowed\",\n                disabled: isSubmitted // Disable if already submitted\n                ,\n                children: \"Submit Answer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true)]\n          }, question._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentDashboardPage, \"BPJsTgf1/Bg1arAHnDSL06YGMzI=\");\n_c = StudentDashboardPage;\nexport default StudentDashboardPage;\nvar _c;\n$RefreshReg$(_c, \"StudentDashboardPage\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","auth","FaCheck","FaTimes","jsxDEV","_jsxDEV","Fragment","_Fragment","StudentDashboardPage","_s","questions","setQuestions","answers","setAnswers","submittedQuestions","setSubmittedQuestions","loading","setLoading","fetchData","questionsResponse","fetch","questionsData","json","submittedResponse","currentUser","uid","submittedData","console","log","err","error","handleAnswerChange","questionId","selectedOption","handleSubmit","alert","response","method","headers","body","JSON","stringify","studentId","data","ok","prev","prevAnswers","updatedAnswers","status","duplicateQuestions","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","question","isSubmitted","_id","studentAnswer","correctAnswer","correct_answer","question_text","options","option","idx","isCorrect","isStudentAnswer","isIncorrect","type","name","value","onChange","disabled","onClick","_c","$RefreshReg$"],"sources":["D:/task_assignment/frontend/src/pages/StudentDashboardPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Navbar from '../components/Navbar';\r\nimport { auth } from '../firebase';\r\nimport { FaCheck, FaTimes } from 'react-icons/fa'; // Icons for correct and incorrect answers\r\n\r\nconst StudentDashboardPage = () => {\r\n  const [questions, setQuestions] = useState([]);\r\n  const [answers, setAnswers] = useState({}); // Track selected answers\r\n  const [submittedQuestions, setSubmittedQuestions] = useState(null); // Track submitted questions and answers\r\n  const [loading, setLoading] = useState(true); // Track loading state\r\n\r\n  // Fetch questions and submitted answers from the backend\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        // Fetch questions\r\n        const questionsResponse = await fetch('https://backend-assignment-zcei.onrender.com/api/questions/get-questions');\r\n        const questionsData = await questionsResponse.json();\r\n        setQuestions(questionsData);\r\n\r\n        // Fetch submitted answers\r\n        const submittedResponse = await fetch(\r\n          `http://localhost:5000/api/results/get-result?studentId=${auth.currentUser.uid}`\r\n        );\r\n        const submittedData = await submittedResponse.json();\r\n        console.log('Submitted Data:', submittedData); // Debugging log\r\n\r\n        if (submittedData.answers) {\r\n          setSubmittedQuestions(submittedData.answers); // Track submitted question IDs and answers\r\n        } else {\r\n          setSubmittedQuestions({}); // Initialize as empty object if no answers exist\r\n        }\r\n      } catch (err) {\r\n        console.error('Error fetching data:', err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Handle answer selection\r\n  const handleAnswerChange = (questionId, selectedOption) => {\r\n    setAnswers({ ...answers, [questionId]: selectedOption });\r\n  };\r\n\r\n  // Handle form submission for a single question\r\n  const handleSubmit = async (questionId) => {\r\n    if (!answers[questionId]) {\r\n      alert('Please select an answer before submitting.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/results/save-result', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          studentId: auth.currentUser.uid,\r\n          answers: { [questionId]: answers[questionId] }, // Submit only the selected question\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      console.log('Submit Response:', data); // Debugging log\r\n\r\n      if (response.ok) {\r\n        alert('Answer submitted successfully!');\r\n        setSubmittedQuestions((prev) => ({ ...prev, [questionId]: answers[questionId] })); // Update submitted questions\r\n        setAnswers((prevAnswers) => {\r\n          const updatedAnswers = { ...prevAnswers };\r\n          delete updatedAnswers[questionId]; // Remove the submitted answer from the state\r\n          return updatedAnswers;\r\n        });\r\n      } else if (response.status === 400 && data.duplicateQuestions) {\r\n        alert('You have already submitted an answer for this question.');\r\n      } else {\r\n        alert('Failed to submit answer.');\r\n      }\r\n    } catch (err) {\r\n      console.error('Error submitting answer:', err);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-screen bg-gradient-to-r from-indigo-500 via-purple-500 to-pink-500\">\r\n        <p className=\"text-lg text-white\">Loading...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-r from-indigo-500 via-purple-500 to-pink-500\">\r\n      <Navbar />\r\n      <div className=\"p-6\">\r\n        {/* Header */}\r\n        <div className=\"text-center mb-8\">\r\n          <h1 className=\"text-4xl font-bold text-white mb-2\">Student Dashboard</h1>\r\n          <p className=\"text-lg text-gray-200\">Answer the questions and track your progress.</p>\r\n        </div>\r\n\r\n        {/* Questions Container */}\r\n        <div className=\"max-w-4xl mx-auto space-y-6\">\r\n          {questions.map((question) => {\r\n            const isSubmitted = submittedQuestions && submittedQuestions[question._id]; // Check if the question is submitted\r\n            const studentAnswer = submittedQuestions && submittedQuestions[question._id]; // Get the student's answer\r\n            const correctAnswer = question.correct_answer; // Get the correct answer\r\n\r\n            return (\r\n              <div\r\n                key={question._id}\r\n                className=\"bg-white p-6 rounded-lg shadow-lg border border-gray-200 hover:shadow-xl transition-shadow duration-300\"\r\n              >\r\n                <h2 className=\"text-xl font-semibold mb-4 text-gray-800\">{question.question_text}</h2>\r\n                {isSubmitted ? (\r\n                  <>\r\n                    <ul className=\"space-y-3\">\r\n                      {question.options.map((option, idx) => {\r\n                        const isCorrect = option === correctAnswer;\r\n                        const isStudentAnswer = option === studentAnswer;\r\n                        const isIncorrect = isStudentAnswer && !isCorrect;\r\n\r\n                        return (\r\n                          <li\r\n                            key={idx}\r\n                            className={`p-3 rounded-md flex items-center ${\r\n                              isCorrect\r\n                                ? 'bg-green-50 border border-green-500'\r\n                                : isIncorrect\r\n                                ? 'bg-red-50 border border-red-500'\r\n                                : 'bg-gray-50'\r\n                            }`}\r\n                          >\r\n                            {isCorrect && <FaCheck className=\"text-green-600 mr-2\" />}\r\n                            {isIncorrect && <FaTimes className=\"text-red-600 mr-2\" />}\r\n                            <span className=\"text-gray-700\">{option}</span>\r\n                            {isCorrect && (\r\n                              <span className=\"ml-2 text-green-600 font-medium\">(Correct Answer)</span>\r\n                            )}\r\n                            {isIncorrect && (\r\n                              <span className=\"ml-2 text-red-600 font-medium\">(Your Answer)</span>\r\n                            )}\r\n                          </li>\r\n                        );\r\n                      })}\r\n                    </ul>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <ul className=\"space-y-3\">\r\n                      {question.options.map((option, idx) => (\r\n                        <li key={idx} className=\"flex items-center\">\r\n                          <input\r\n                            type=\"radio\"\r\n                            name={`question-${question._id}`}\r\n                            value={option}\r\n                            onChange={() => handleAnswerChange(question._id, option)}\r\n                            className=\"mr-3 h-5 w-5 text-blue-600 border-gray-300 focus:ring-blue-500\"\r\n                            disabled={isSubmitted} // Disable if already submitted\r\n                          />\r\n                          <span className=\"text-gray-700\">{option}</span>\r\n                        </li>\r\n                      ))}\r\n                    </ul>\r\n                    <button\r\n                      onClick={() => handleSubmit(question._id)}\r\n                      className=\"mt-4 w-full sm:w-auto bg-blue-600 text-white px-6 py-2 rounded-md hover:bg-blue-700 transition-all disabled:bg-gray-400 disabled:cursor-not-allowed\"\r\n                      disabled={isSubmitted} // Disable if already submitted\r\n                    >\r\n                      Submit Answer\r\n                    </button>\r\n                  </>\r\n                )}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentDashboardPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}