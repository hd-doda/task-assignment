{"ast":null,"code":"import React,{useState,useEffect}from'react';import Navbar from'../components/Navbar';import{auth}from'../firebase';import{FaCheck,FaTimes}from'react-icons/fa';// Icons for correct and incorrect answers\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const StudentDashboardPage=()=>{const[questions,setQuestions]=useState([]);const[answers,setAnswers]=useState({});// Track selected answers\nconst[submittedQuestions,setSubmittedQuestions]=useState(null);// Track submitted questions and answers\nconst[loading,setLoading]=useState(true);// Track loading state\n// Fetch questions and submitted answers from the backend\nuseEffect(()=>{const fetchData=async()=>{try{// Fetch questions\nconst questionsResponse=await fetch('https://assignment-backend-ejto.onrender.com/api/questions/get-questions');const questionsData=await questionsResponse.json();setQuestions(questionsData);// Fetch submitted answers\nconst submittedResponse=await fetch(`https://assignment-backend-ejto.onrender.com/api/results/get-result?studentId=${auth.currentUser.uid}`);const submittedData=await submittedResponse.json();console.log('Submitted Data:',submittedData);// Debugging log\nif(submittedData.answers){setSubmittedQuestions(submittedData.answers);// Track submitted question IDs and answers\n}else{setSubmittedQuestions({});// Initialize as empty object if no answers exist\n}}catch(err){console.error('Error fetching data:',err);}finally{setLoading(false);}};fetchData();},[]);// Handle answer selection\nconst handleAnswerChange=(questionId,selectedOption)=>{setAnswers({...answers,[questionId]:selectedOption});};// Handle form submission for a single question\nconst handleSubmit=async questionId=>{if(!answers[questionId]){alert('Please select an answer before submitting.');return;}try{const response=await fetch('https://assignment-backend-ejto.onrender.com/api/results/save-result',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({studentId:auth.currentUser.uid,answers:{[questionId]:answers[questionId]}// Submit only the selected question\n})});const data=await response.json();console.log('Submit Response:',data);// Debugging log\nif(response.ok){alert('Answer submitted successfully!');setSubmittedQuestions(prev=>({...prev,[questionId]:answers[questionId]}));// Update submitted questions\nsetAnswers(prevAnswers=>{const updatedAnswers={...prevAnswers};delete updatedAnswers[questionId];// Remove the submitted answer from the state\nreturn updatedAnswers;});}else if(response.status===400&&data.duplicateQuestions){alert('You have already submitted an answer for this question.');}else{alert('Failed to submit answer.');}}catch(err){console.error('Error submitting answer:',err);}};if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center justify-center min-h-screen bg-gradient-to-r from-indigo-500 via-purple-500 to-pink-500\",children:/*#__PURE__*/_jsx(\"p\",{className:\"text-lg text-white\",children:\"Loading...\"})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"min-h-screen bg-gradient-to-r from-indigo-500 via-purple-500 to-pink-500\",children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"p-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-center mb-8\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-4xl font-bold text-white mb-2\",children:\"Student Dashboard\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-lg text-gray-200\",children:\"Answer the questions and track your progress.\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"max-w-4xl mx-auto space-y-6\",children:questions.map(question=>{const isSubmitted=submittedQuestions&&submittedQuestions[question._id];// Check if the question is submitted\nconst studentAnswer=submittedQuestions&&submittedQuestions[question._id];// Get the student's answer\nconst correctAnswer=question.correct_answer;// Get the correct answer\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white p-6 rounded-lg shadow-lg border border-gray-200 hover:shadow-xl transition-shadow duration-300\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-semibold mb-4 text-gray-800\",children:question.question_text}),isSubmitted?/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"ul\",{className:\"space-y-3\",children:question.options.map((option,idx)=>{const isCorrect=option===correctAnswer;const isStudentAnswer=option===studentAnswer;const isIncorrect=isStudentAnswer&&!isCorrect;return/*#__PURE__*/_jsxs(\"li\",{className:`p-3 rounded-md flex items-center ${isCorrect?'bg-green-50 border border-green-500':isIncorrect?'bg-red-50 border border-red-500':'bg-gray-50'}`,children:[isCorrect&&/*#__PURE__*/_jsx(FaCheck,{className:\"text-green-600 mr-2\"}),isIncorrect&&/*#__PURE__*/_jsx(FaTimes,{className:\"text-red-600 mr-2\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-700\",children:option}),isCorrect&&/*#__PURE__*/_jsx(\"span\",{className:\"ml-2 text-green-600 font-medium\",children:\"(Correct Answer)\"}),isIncorrect&&/*#__PURE__*/_jsx(\"span\",{className:\"ml-2 text-red-600 font-medium\",children:\"(Your Answer)\"})]},idx);})})}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"ul\",{className:\"space-y-3\",children:question.options.map((option,idx)=>/*#__PURE__*/_jsxs(\"li\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:`question-${question._id}`,value:option,onChange:()=>handleAnswerChange(question._id,option),className:\"mr-3 h-5 w-5 text-blue-600 border-gray-300 focus:ring-blue-500\",disabled:isSubmitted// Disable if already submitted\n}),/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-700\",children:option})]},idx))}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleSubmit(question._id),className:\"mt-4 w-full sm:w-auto bg-blue-600 text-white px-6 py-2 rounded-md hover:bg-blue-700 transition-all disabled:bg-gray-400 disabled:cursor-not-allowed\",disabled:isSubmitted// Disable if already submitted\n,children:\"Submit Answer\"})]})]},question._id);})})]})]});};export default StudentDashboardPage;","map":{"version":3,"names":["React","useState","useEffect","Navbar","auth","FaCheck","FaTimes","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","StudentDashboardPage","questions","setQuestions","answers","setAnswers","submittedQuestions","setSubmittedQuestions","loading","setLoading","fetchData","questionsResponse","fetch","questionsData","json","submittedResponse","currentUser","uid","submittedData","console","log","err","error","handleAnswerChange","questionId","selectedOption","handleSubmit","alert","response","method","headers","body","JSON","stringify","studentId","data","ok","prev","prevAnswers","updatedAnswers","status","duplicateQuestions","className","children","map","question","isSubmitted","_id","studentAnswer","correctAnswer","correct_answer","question_text","options","option","idx","isCorrect","isStudentAnswer","isIncorrect","type","name","value","onChange","disabled","onClick"],"sources":["D:/task_assignment/frontend/src/pages/StudentDashboardPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Navbar from '../components/Navbar';\r\nimport { auth } from '../firebase';\r\nimport { FaCheck, FaTimes } from 'react-icons/fa'; // Icons for correct and incorrect answers\r\n\r\nconst StudentDashboardPage = () => {\r\n  const [questions, setQuestions] = useState([]);\r\n  const [answers, setAnswers] = useState({}); // Track selected answers\r\n  const [submittedQuestions, setSubmittedQuestions] = useState(null); // Track submitted questions and answers\r\n  const [loading, setLoading] = useState(true); // Track loading state\r\n\r\n  // Fetch questions and submitted answers from the backend\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        // Fetch questions\r\n        const questionsResponse = await fetch('https://assignment-backend-ejto.onrender.com/api/questions/get-questions');\r\n        const questionsData = await questionsResponse.json();\r\n        setQuestions(questionsData);\r\n\r\n        // Fetch submitted answers\r\n        const submittedResponse = await fetch(\r\n          `https://assignment-backend-ejto.onrender.com/api/results/get-result?studentId=${auth.currentUser.uid}`\r\n        );\r\n        const submittedData = await submittedResponse.json();\r\n        console.log('Submitted Data:', submittedData); // Debugging log\r\n\r\n        if (submittedData.answers) {\r\n          setSubmittedQuestions(submittedData.answers); // Track submitted question IDs and answers\r\n        } else {\r\n          setSubmittedQuestions({}); // Initialize as empty object if no answers exist\r\n        }\r\n      } catch (err) {\r\n        console.error('Error fetching data:', err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Handle answer selection\r\n  const handleAnswerChange = (questionId, selectedOption) => {\r\n    setAnswers({ ...answers, [questionId]: selectedOption });\r\n  };\r\n\r\n  // Handle form submission for a single question\r\n  const handleSubmit = async (questionId) => {\r\n    if (!answers[questionId]) {\r\n      alert('Please select an answer before submitting.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch('https://assignment-backend-ejto.onrender.com/api/results/save-result', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          studentId: auth.currentUser.uid,\r\n          answers: { [questionId]: answers[questionId] }, // Submit only the selected question\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      console.log('Submit Response:', data); // Debugging log\r\n\r\n      if (response.ok) {\r\n        alert('Answer submitted successfully!');\r\n        setSubmittedQuestions((prev) => ({ ...prev, [questionId]: answers[questionId] })); // Update submitted questions\r\n        setAnswers((prevAnswers) => {\r\n          const updatedAnswers = { ...prevAnswers };\r\n          delete updatedAnswers[questionId]; // Remove the submitted answer from the state\r\n          return updatedAnswers;\r\n        });\r\n      } else if (response.status === 400 && data.duplicateQuestions) {\r\n        alert('You have already submitted an answer for this question.');\r\n      } else {\r\n        alert('Failed to submit answer.');\r\n      }\r\n    } catch (err) {\r\n      console.error('Error submitting answer:', err);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-screen bg-gradient-to-r from-indigo-500 via-purple-500 to-pink-500\">\r\n        <p className=\"text-lg text-white\">Loading...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-r from-indigo-500 via-purple-500 to-pink-500\">\r\n      <Navbar />\r\n      <div className=\"p-6\">\r\n        {/* Header */}\r\n        <div className=\"text-center mb-8\">\r\n          <h1 className=\"text-4xl font-bold text-white mb-2\">Student Dashboard</h1>\r\n          <p className=\"text-lg text-gray-200\">Answer the questions and track your progress.</p>\r\n        </div>\r\n\r\n        {/* Questions Container */}\r\n        <div className=\"max-w-4xl mx-auto space-y-6\">\r\n          {questions.map((question) => {\r\n            const isSubmitted = submittedQuestions && submittedQuestions[question._id]; // Check if the question is submitted\r\n            const studentAnswer = submittedQuestions && submittedQuestions[question._id]; // Get the student's answer\r\n            const correctAnswer = question.correct_answer; // Get the correct answer\r\n\r\n            return (\r\n              <div\r\n                key={question._id}\r\n                className=\"bg-white p-6 rounded-lg shadow-lg border border-gray-200 hover:shadow-xl transition-shadow duration-300\"\r\n              >\r\n                <h2 className=\"text-xl font-semibold mb-4 text-gray-800\">{question.question_text}</h2>\r\n                {isSubmitted ? (\r\n                  <>\r\n                    <ul className=\"space-y-3\">\r\n                      {question.options.map((option, idx) => {\r\n                        const isCorrect = option === correctAnswer;\r\n                        const isStudentAnswer = option === studentAnswer;\r\n                        const isIncorrect = isStudentAnswer && !isCorrect;\r\n\r\n                        return (\r\n                          <li\r\n                            key={idx}\r\n                            className={`p-3 rounded-md flex items-center ${\r\n                              isCorrect\r\n                                ? 'bg-green-50 border border-green-500'\r\n                                : isIncorrect\r\n                                ? 'bg-red-50 border border-red-500'\r\n                                : 'bg-gray-50'\r\n                            }`}\r\n                          >\r\n                            {isCorrect && <FaCheck className=\"text-green-600 mr-2\" />}\r\n                            {isIncorrect && <FaTimes className=\"text-red-600 mr-2\" />}\r\n                            <span className=\"text-gray-700\">{option}</span>\r\n                            {isCorrect && (\r\n                              <span className=\"ml-2 text-green-600 font-medium\">(Correct Answer)</span>\r\n                            )}\r\n                            {isIncorrect && (\r\n                              <span className=\"ml-2 text-red-600 font-medium\">(Your Answer)</span>\r\n                            )}\r\n                          </li>\r\n                        );\r\n                      })}\r\n                    </ul>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <ul className=\"space-y-3\">\r\n                      {question.options.map((option, idx) => (\r\n                        <li key={idx} className=\"flex items-center\">\r\n                          <input\r\n                            type=\"radio\"\r\n                            name={`question-${question._id}`}\r\n                            value={option}\r\n                            onChange={() => handleAnswerChange(question._id, option)}\r\n                            className=\"mr-3 h-5 w-5 text-blue-600 border-gray-300 focus:ring-blue-500\"\r\n                            disabled={isSubmitted} // Disable if already submitted\r\n                          />\r\n                          <span className=\"text-gray-700\">{option}</span>\r\n                        </li>\r\n                      ))}\r\n                    </ul>\r\n                    <button\r\n                      onClick={() => handleSubmit(question._id)}\r\n                      className=\"mt-4 w-full sm:w-auto bg-blue-600 text-white px-6 py-2 rounded-md hover:bg-blue-700 transition-all disabled:bg-gray-400 disabled:cursor-not-allowed\"\r\n                      disabled={isSubmitted} // Disable if already submitted\r\n                    >\r\n                      Submit Answer\r\n                    </button>\r\n                  </>\r\n                )}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentDashboardPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}